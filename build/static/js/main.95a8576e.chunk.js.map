{"version":3,"sources":["assets/icon/radio.png","serviceWorker.js","components/Clock.js","components/News.js","components/Radio.js","service/iconService.js","components/Weather.js","components/Timer.js","service/renderComponent.js","views/Dashboard.js","routes.js","views/AdminPage.js","SwitchRoutes.js","views/RadioPage.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Clock","props","state","seconds","this","setState","prevState","interval","setInterval","tick","clearInterval","clockFormat","FormatHorloge","className","Header","as","inverted","textAlign","format","locale","tz","TimeZone","Subheader","FormatDate","React","Component","News","news","axios","get","Source","then","res","data","articles","slice","NewsNumber","map","n","Grid","Column","key","url","Row","Image","src","urlToImage","verticalAlign","size","floated","title","date","publishedAt","description","length","Loader","active","columns","renderList","Radio","href","radio","centered","GetIcon","name","Weather","callWeather","Axios","Location","ApiKey","response","result","status","console","log","main","weather","icon","temp","actuel","precise","min","temp_min","max","temp_max","wind","speed","deg","humidity","sunrise","sys","sunset","catch","error","isError","errorMsg","message","x","Temperature","Number","parseFloat","toFixed","Math","trunc","d","Date","getHours","getMinutes","Message","header","content","Timer","startTimer","isPlaying","buttonActive","setCountdown","times","resetTimer","renderTime","value","generateTimeButton","split","Button","onClick","buttonValue","iconValue","Container","durationSeconds","colors","toggle","labelPosition","Icon","Group","widths","RenderComponent","component","Object","keys","Localisation","Horloge","Times","Dashboard","db","DashboardConfig","val","segment_style","height","floor","document","body","offsetHeight","overflow","bloc_style","padding","marging","undefined","id","style","TopLeft","TopRight","BottomLeft","BottomRight","Link","to","position","top","left","dashBoardRoutes","path","handleChangeForm","e","nameSplited","stateKey","nameKey","widgetKey","config","assign","WidgetList","generateForm","configAvailable","formField","info","entries","param","push","Form","Select","label","options","generateFormSelect","onChange","Input","defaultValue","handleChange","updateJson","ConfigTopLeft","ConfigBottomLeft","ConfigTopRight","ConfigBottomRight","post","text","values","forEach","onSubmit","createOptionList","Divider","horizontal","type","reload","Or","positive","handleSave","fluid","renderFormPosition","switchRoutes","routes","prop","render","from","RadioPage","source","i","Active","circular","Img","createMusicPlayer","listRadio","srcRadio","hour_val","getSeconds","autoPlay","onPlay","hist","createBrowserHistory","ReactDOM","history","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95a8576e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/radio.2d3426f8.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'moment-timezone';\nimport 'moment/locale/fr';\nimport React from 'react';\nimport Moment from 'react-moment';\nimport { Header } from 'semantic-ui-react';\nimport './Clock.component.scss';\nclass Clock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { seconds: 0 };\n    }\n\n    tick() {\n        this.setState(prevState => ({\n            seconds: prevState.seconds + 1\n        }));\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.tick(), 1000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    render() {\n        let clockFormat = \"\"\n        if (this.props.FormatHorloge === \"12h\") {\n            clockFormat = \"hh:mm:ss\"\n        } else {\n            clockFormat = \"HH:mm:ss\"\n        }\n        return (\n            <div className=\"clock\">\n                <Header as='h1' className='hour mb-0' inverted textAlign='center'>\n                    <Moment format={clockFormat} locale=\"fr\" tz={this.props.TimeZone} />\n                    <Header.Subheader className='date'>\n                        <Moment format={this.props.FormatDate} locale=\"fr\" />\n                    </Header.Subheader>\n                </Header>\n                <Header as='h4' inverted textAlign='center'>\n                    {this.props.TimeZone}\n                </Header>\n            </div>\n        );\n    }\n}\n\nexport default Clock;","import axios from \"axios\";\nimport React from \"react\";\nimport Moment from \"react-moment\";\nimport { Grid, Header, Image, Loader } from \"semantic-ui-react\";\nimport './News.css';\n\nclass News extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { news: [] }\n  }\n\n  componentDidMount() {\n    axios.get(this.props.Source).then(res => {\n      const news = res.data.articles;\n      this.setState({ news: news });\n    });\n  };\n\n  renderList() {\n    return this.state.news.slice(0, this.props.NewsNumber).map(n => {\n      return (\n        <Grid.Column key={n.url}>\n          <Grid.Row>\n            <Header as=\"h2\" inverted>\n              <Image src={n.urlToImage} verticalAlign='middle' size='small' floated='left' /> {n.title}\n              <Header.Subheader>\n                <b><Moment date={n.publishedAt} format=\"HH:mm DD/MM/YYYY\" /></b>\n                <p>{n.description}</p>\n              </Header.Subheader>\n            </Header>\n          </Grid.Row>\n        </Grid.Column>\n      )\n    })\n  }\n\n  render() {\n    if (this.state.news.length === 0) {\n      return <Loader active />\n    }\n\n    return (\n      <div>\n        <Grid columns={1} className='news'>\n          {this.renderList()}\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default News\n","import React from \"react\";\nimport radio from '../assets/icon/radio.png';\nimport { Image } from \"semantic-ui-react\";\n\nclass Radio extends React.Component {\n    render() {\n        return (\n            <div>\n                <a href=\"/radio\">\n                    <Image src={radio} centered size='small'/>\n                </a>\n            </div>\n        );\n    }\n}\n\nexport default Radio","export default function GetIcon(name) {\n    const icons = {\n        \"light rain\": \"wi-rain\",\n        \"moderate rain\": \"wi-rain\",\n        \"heavy intensity rain\": \"wi-day-rain\",\n        \"very heavy rain\": \"wi-day-rain\",\n        \"extreme rain\": \"wi-rain\",\n        \"freezing rain\": \"wi-rain-mix\",\n        \"light intensity shower rain\": \"wi-showers\",\n        \"heavy intensity shower rain\": \"wi-showers\",\n        \"ragged shower rain\t\": \"wi-showers\",\n        \"thunderstorm with light rain\":\"wi-thunderstorm\",\n        \"thunderstorm with rain\": \"wi-thunderstorm\",\n        \"thunderstorm with heavy rain\": \"wi-thunderstorm\",\n        \"light thunderstorm\": \"wi-thunderstorm\",\n        \"heavy thunderstorm\": \"wi-thunderstorm\",\n        \"ragged thunderstorm\": \"wi-thunderstorm\",\n        \"thunderstorm with light drizzle\": \"wi-thunderstorm\",\n        \"thunderstorm with drizzle\": \"wi-thunderstorm\",\n        \"thunderstorm with heavy drizzle\": \"wi-thunderstorm\",\n        \"light intensity drizzle\": \"wi-sprinkle\",\n        \"drizzle\": \"wi-sprinkle\",\n        \"heavy intensity drizzle\": \"wi-sprinkle\",\n        \"light intensity drizzle rain\": \"wi-sprinkle\",\n        \"drizzle rain\": \"wi-sprinkle\",\n        \"heavy intensity drizzle rain\": \"wi-sprinkle\",\n        \"shower rain and drizzle\": \"wi-sprinkle\",\n        \"heavy shower rain and drizzle\": \"wi-showers\",\n        \"shower drizzle\": \"wi-showers\",\n        \"light snow\": \"wi-snow\",\n        \"Snow\": \"wi-snow\",\n        \"Heavy snow\": \"wi-snow\",\n        \"Sleet\": \"wi-snow\",\n        \"Light shower sleet\": \"wi-snow\",\n        \"Shower sleet\": \"wi-snow\",\n        \"Light rain and snow\": \"wi-snow\",\n        \"Rain and snow\": \"wi-snow\",\n        \"Light shower snow\": \"wi-snow\",\n        \"Shower snow\": \"wi-snow\",\n        \"Heavy shower snow\": \"wi-snow\",\n        \"clear sky\": \"wi-day-sunny\",\n        \"overcast clouds\":\"wi-day-cloudy\",\n        \"few clouds\": \"wi-day-cloudy\",\n        \"scattered clouds\": \"wi-day-cloudy-high\",\n        \"broken clouds\":\"wi-day-cloudy-high\",\n        \"shower rain\":\"wi-showers\",\n        \"rain\":\"wi-rain\",\n        \"thunderstorm\": \"wi-thunderstorm\",\n        \"snow\": \"wi-snowflake-cold\",\n        \"mist\":\"wi-fog\",\n        \"Celsius\":\"wi-celsius\",\n        \"Fahrenheit\": \"wi-fahrenheit\"\n    }\n    return icons[name]\n}\n","import Axios from \"axios\";\nimport React from \"react\";\nimport { Message, Header, Grid } from \"semantic-ui-react\";\nimport GetIcon from \"../service/iconService.js\";\nimport './Weather.css';\nimport 'weathericons/css/weather-icons.css';\nimport 'weathericons/css/weather-icons-wind.css';\n\nclass Weather extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            main: null,\n            description: null,\n            icon: null,\n            temp: {\n                actuel: null,\n                min: null,\n                max: null\n            },\n            wind: {\n                speed: null,\n                deg: null\n            },\n            humidity: null,\n            sunrise: null,\n            sunset: null,\n            name: null,\n            isError: false,\n            errorMsg: \"\",\n        }\n    }\n\n    callWeather = () => {\n        Axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\" + this.props.Location + \"&APPID=\" + this.props.ApiKey + \"&units=metric\")\n            .then((response) => {\n                var result = response.data\n                if (response.status === 200) {\n                    console.log(result)\n                    this.setState({\n                        main: result.weather[0].description,\n                        icon: result.weather[0].icon,\n                        description: result.weather[0].description,\n                        temp: {\n                            actuel: this.precise(result.main.temp),\n                            min: this.precise(result.main.temp_min),\n                            max: this.precise(result.main.temp_max)\n                        },\n                        wind: {\n                            speed: result.wind.speed,\n                            deg: result.wind.deg,\n                        },\n                        humidity: result.main.humidity + \" %\",\n                        sunrise: this.format(result.sys.sunrise),\n                        sunset: this.format(result.sys.sunset),\n                        name: result.name\n                    });\n                }\n            }).catch((error) => {\n                if (error.response) {\n                    this.setState({\n                        isError: true,\n                        errorMsg: error.response.data.message\n                    })\n                }\n            });\n    }\n\n    componentDidMount() {\n        this.callWeather();\n        setInterval(this.callWeather, 3600000)\n    }\n\n    // TOUTES LES FONCTIONS UTILES DANS LE COMPOSANT\n    precise(x) {\n        if (this.props.Temperature === \"Kelvin\") {\n            return Number.parseFloat(x + 273.15).toFixed(2);\n        } else if (this.props.Temperature === \"Fahrenheit\") {\n            return Number.parseFloat(x * 1.8 + 32).toFixed(0)\n        }\n        else {\n            return Math.trunc(x);\n        }\n    }\n\n    format(date) {\n        let d = new Date(date * 1000);\n        return d.getHours() + \"H\" + d.getMinutes();\n    }\n\n    render() {\n        if (this.state.isError) {\n            return (\n                <div>\n                    <Message error icon='warning' header='Erreur lors de la récupération de la météo'\n                        content={this.state.errorMsg} />\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                <Header inverted textAlign='center' as='h1'><i className={\"wi \" + GetIcon(this.state.main)} /></Header>\n                <Header inverted as='h1' textAlign='center' className='noMarginBotom'>{this.state.name}</Header>\n                <Grid columns='4' centered>\n                    <Grid.Column>\n                        <Header inverted textAlign='center'>\n                            <i className='wi wi-thermometer' />\n                            <Header.Subheader>\n                                {this.state.temp.actuel} <i className={'wi ' + GetIcon(this.props.Temperature)} />&nbsp;\n                            (<i className='wi wi-direction-down' /> {this.state.temp.min} <i className={'wi ' + GetIcon(this.props.Temperature)} /> à\n                            <i className='wi wi-direction-up' /> {this.state.temp.max} <i className={'wi ' + GetIcon(this.props.Temperature)} />)\n                            </Header.Subheader>\n                        </Header>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Header inverted textAlign='center'>\n                            <i className='wi wi-day-sunny' />\n                            <Header.Subheader>\n                                <i\n                                    className='wi wi-sunrise' /> {this.state.sunrise} à {this.state.sunset} <i\n                                    className='wi wi-sunset' />\n                            </Header.Subheader>\n                        </Header>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Header inverted textAlign='center'>\n                            <i className='wi wi-humidity' />\n                            <Header.Subheader>\n                                {this.state.humidity}\n                            </Header.Subheader>\n                        </Header>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Header inverted textAlign='center'>\n                            <i className='wi wi-strong-wind' />\n                            <Header.Subheader>\n                                {this.state.wind.speed + \" km/h\"} (<i\n                                    className={\"wi wi-wind towards-\" + this.state.wind.deg + \"-deg\"} /> {this.state.wind.deg})\n                            </Header.Subheader>\n                        </Header>\n                    </Grid.Column>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default Weather;","import React from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport { Header, Button, Icon, Container } from \"semantic-ui-react\";\nclass Timer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            seconds: 0,\n            isPlaying: false,\n            buttonActive: false\n        }\n    }\n\n    startTimer = () => {\n        this.setState({ isPlaying: !this.state.isPlaying, buttonActive: !this.state.buttonActive })\n    }\n\n    setCountdown = (times) => () => {\n        this.setState({ seconds: times * 60 })\n    }\n\n    resetTimer = () => {\n        this.setState({ seconds: 0, isPlaying: true })\n    }\n\n    renderTime = value => {\n        if (value === 0) {\n            return <Header as='h4' textAlign='center' inverted>Ecoulé...</Header>;\n        }\n\n        return (\n            <div className=\"timer\">\n                <Header as='h5' textAlign='center' inverted>Restant</Header>\n                <Header as='h4' textAlign='center' inverted>{value}</Header>\n                <Header as='h5' textAlign='center' inverted>secondes</Header>\n            </div>\n        );\n    };\n\n\n\n    generateTimeButton = () => {\n        let availableValue = this.props.Timer.split(',')\n        return availableValue.map(value => {\n            return (\n                <Button key={value} onClick={this.setCountdown(value)}>\n                    {value + \" min\"}\n                </Button>\n            )\n        })\n    }\n\n    render() {\n        let buttonValue = this.state.buttonActive ? 'Pause' : 'Lancer'\n        let iconValue = this.state.buttonActive ? 'pause' : 'play'\n        return (\n            <Container>\n                <CountdownCircleTimer\n                    isPlaying={this.state.isPlaying}\n                    durationSeconds={this.state.seconds}\n                    renderTime={this.renderTime}\n                    size={130}\n                    colors={[[\"#2185d0\"]]}\n                />\n                <br />\n                <Button icon toggle active={this.state.buttonActive} onClick={this.startTimer} labelPosition='left' floated='left'>\n                    <Icon name={iconValue} />\n                    {buttonValue}\n                </Button>\n                <Button icon onClick={this.resetTimer} labelPosition='left' floated='right'>\n                    <Icon name='undo' />\n                    Reset\n                </Button>\n                <br />\n                <Button.Group widths='5'>\n                    {this.generateTimeButton()}\n                </Button.Group>\n            </Container>\n        );\n    }\n}\n\n\n\nexport default Timer","import React from 'react'\nimport Clock from \"../components/Clock\"\nimport News from \"../components/News\"\nimport Radio from \"../components/Radio\"\nimport Weather from \"../components/Weather\"\nimport Timer from '../components/Timer'\n\nexport default function RenderComponent(component) {\n    switch (Object.keys(component)[0]) {\n        case 'Météo':\n            return <Weather\n                Location={component[\"Météo\"].Localisation}\n                Temperature={component[\"Météo\"].Temperature}\n                ApiKey={component[\"Météo\"].ApiKey}\n            />;\n        case 'Horloge':\n            return <Clock\n                TimeZone={component.Horloge[\"Time Zone\"]}\n                FormatHorloge={component.Horloge[\"Format Heure\"]}\n                FormatDate={component.Horloge[\"Format Date\"]}\n            />;\n        case 'News':\n            return <News Source={component.News.Source} NewsNumber={component.News[\"News à afficher\"]} />;\n        case 'Radio':\n            return <Radio Source={component.Radio.Source} />;\n        case 'Timer':\n            return <Timer Timer={component.Timer.Times} />;\n        default:\n            return console.log(\"No component found\")\n    }\n}","import React from 'react';\nimport {Button, Icon, Loader} from 'semantic-ui-react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport RenderComponent from '../service/renderComponent';\nimport './dashboard.css'\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {db: {}};\n    }\n\n    componentDidMount() {\n        axios.get(\"db.json\")\n            .then(res => {\n                this.setState({db: res.data})\n            })\n    }\n\n    renderGrid() {\n        var {db} = this.state;\n\n        db.DashboardConfig.map(val => {\n            return console.log(val)\n\n        })\n    }\n\n    render() {\n        const seg_size = Math.floor(document.body.offsetHeight / 2) - 2;\n        const segment_style = {\n            height: seg_size + 'px',\n            overflow: \"auto\"\n        };\n        const bloc_style = {\n            padding: '1px',\n            marging: '2px'\n        };\n        const center_bloc_style = {\n            position: 'fixed',\n            top: '47%', left: '48%'\n        }\n        if (this.state.db.DashboardConfig !== undefined) {\n            return (\n                <div>\n                    <div id={\"container\"} className=\"ui grid m-0\">\n                        <div className=\"eight wide column\" style={bloc_style}>\n                            <div className=\"ui blue inverted segment\" style={segment_style}>\n                                {RenderComponent(this.state.db.DashboardConfig.TopLeft)}\n                            </div>\n                        </div>\n                        <div className=\"eight wide column\" style={bloc_style}>\n                            <div className=\"ui red inverted segment\" style={segment_style}>\n                                {RenderComponent(this.state.db.DashboardConfig.TopRight)}\n                            </div>\n                        </div>\n                        <div className=\"eight wide column\" style={bloc_style}>\n                            <div className=\"ui green inverted segment\" style={segment_style}>\n                                {RenderComponent(this.state.db.DashboardConfig.BottomLeft)}\n                            </div>\n                        </div>\n                        <div className=\"eight wide column\" style={bloc_style}>\n                            <div className=\"ui black inverted segment\" style={segment_style}>\n                                {RenderComponent(this.state.db.DashboardConfig.BottomRight)}\n                            </div>\n                        </div>\n                    </div>\n                    <div className={\"parameter-div\"}>\n                        <Button  labelPosition='right' icon as={Link} to=\"/admin\" floated='right'>\n                            <Icon name=\"cogs\"/>\n                             Configuration\n                        </Button>\n                    </div>\n                    <div style={center_bloc_style}>\n\n                    </div>\n                </div>\n            );\n        } else {\n            return <Loader active/>\n        }\n    }\n}\n\nexport default Dashboard;","import Dashboard from \"./views/Dashboard\";\nimport AdminPage from \"./views/AdminPage\";\n\nconst dashBoardRoutes = [\n    {\n        path: \"/dashboard\",\n        name: \"Dashboard\",\n        component: Dashboard\n    },\n    {\n        path: \"/admin\",\n        name: \"AdminPage\",\n        component: AdminPage\n    },\n];\n\nexport default dashBoardRoutes;","import Axios from 'axios';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Container, Divider, Form, Grid, Header, Icon, Message } from 'semantic-ui-react';\nimport './adminPage.views.css';\n\nclass AdminPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            config: {},\n            WidgetList: {},\n            TopRight: \"\",\n            TopLeft: \"\",\n            BottomLeft: \"\",\n            BottomRight: \"\",\n            ConfigTopLeft: {},\n            ConfigTopRight: {},\n            ConfigBottomLeft: {},\n            ConfigBottomRight: {},\n        };\n    }\n\n\n    componentDidMount() {\n        Axios.get(\"db.json\")\n            .then(res => {\n                var config = res.data\n                this.setState({\n                    config: config,\n                    TopLeft: Object.keys(config.DashboardConfig.TopLeft)[0],\n                    TopRight: Object.keys(config.DashboardConfig.TopRight)[0],\n                    BottomLeft: Object.keys(config.DashboardConfig.BottomLeft)[0],\n                    BottomRight: Object.keys(config.DashboardConfig.BottomRight)[0],\n                    ConfigTopLeft: config.DashboardConfig.TopLeft,\n                    ConfigTopRight: config.DashboardConfig.TopRight,\n                    ConfigBottomLeft: config.DashboardConfig.BottomLeft,\n                    ConfigBottomRight: config.DashboardConfig.BottomRight,\n                })\n            })\n\n        Axios.get(\"widgetConfig.json\")\n            .then(res => {\n                this.setState({\n                    WidgetList: res.data\n                })\n            })\n    }\n\n    createOptionList() {\n        var options = [];\n        for (let [key] of Object.entries(this.state.WidgetList)) {\n            options.push({\n                key: key,\n                value: key,\n                text: key,\n            })\n        }\n        return options\n    }\n\n    handleChangeForm = (e, { name, value }) => {\n        const nameSplited = name.split(\".\")\n        const stateKey = nameSplited[0]\n        const nameKey = nameSplited[1]\n        const widgetKey = nameSplited[2]\n        let config = Object.assign({}, this.state[stateKey])\n        if (Object.keys(this.state[stateKey])[0] === widgetKey) {\n            config[widgetKey][nameKey] = value\n            this.setState(\n                { [stateKey]: config }\n            )\n        } else {\n            let config = Object.assign({}, this.state.WidgetList[widgetKey])\n            config = {\n                [widgetKey]: config\n            }\n            this.setState(\n                { [stateKey]: config }\n            )\n        }\n    }\n\n    generateFormSelect(values) {\n        var options = [];\n\n        values.forEach(val => {\n            options.push({\n                key: val,\n                value: val,\n                text: val,\n            })\n        })\n        return options\n    }\n\n    generateForm = (configAvailable, widgetKey, position) => {\n        var formField = [];\n\n        if (configAvailable[widgetKey] !== undefined && widgetKey !== 'Radio') {\n            for (var [param, value] of Object.entries(configAvailable[widgetKey])) {\n                if (typeof value === \"object\") {\n                    if (this.state.config.DashboardConfig[position][widgetKey] !== undefined) {\n                        formField.push(\n                            <Form.Select\n                                key={param}\n                                name={\"Config\" + position + \".\" + param + \".\" + widgetKey}\n                                label={param}\n                                value={this.state.config.DashboardConfig[position][widgetKey][param] || \"default\"}\n                                options={this.generateFormSelect(value)}\n                                onChange={this.handleChangeForm}\n                            />\n                        )\n                    } else {\n                        //Use default config\n                        formField.push(\n                            <Form.Select\n                                key={param}\n                                name={\"Config\" + position + \".\" + param + \".\" + widgetKey}\n                                label={param}\n                                value={value[0]}\n                                options={this.generateFormSelect(value)}\n                                onChange={this.handleChangeForm}\n                            />\n                        )\n                    }\n                } else {\n                    if (this.state.config.DashboardConfig[position][widgetKey] !== undefined) {\n                        let name = \"Config\" + position + \".\" + param + \".\" + widgetKey\n                        formField.push(\n                            <Form.Input\n                                label={param}\n                                defaultValue={this.state.config.DashboardConfig[position][widgetKey][param]}\n                                key={param}\n                                name={name}\n                                onChange={this.handleChangeForm}\n                            />\n                        );\n                    } else {\n                        //Use default config\n                        formField.push(\n                            <Form.Input\n                                label={param}\n                                defaultValue={value}\n                                key={param}\n                                name={\"Config\" + position + \".\" + param + \".\" + widgetKey}\n                                onChange={this.handleChangeForm}\n                            />\n                        );\n                    }\n                }\n            }\n        } else {\n            return <Message info icon='warning sign' content='La radio ne peut être modifier' />\n        }\n        return formField;\n    }\n\n    handleChange = (e, { name, value }) => {\n        let config = Object.assign({}, this.state.WidgetList[value])\n        config = {\n            [value]: config\n        }\n\n        this.setState({\n            [\"Config\" + name]: config\n        })\n\n        this.setState({ [name]: value })\n    }\n\n    updateJson = () => {\n        const { config, ConfigTopLeft, ConfigBottomLeft, ConfigTopRight, ConfigBottomRight } = this.state;\n\n        config.DashboardConfig.TopLeft = ConfigTopLeft;\n        config.DashboardConfig.TopRight = ConfigTopRight;\n        config.DashboardConfig.BottomLeft = ConfigBottomLeft;\n        config.DashboardConfig.BottomRight = ConfigBottomRight;\n\n        Axios.post(\"/api/save\", config).then(\n            console.log(\"Sauvegarde réussie\")\n        )\n    }\n\n    renderFormPosition() {\n        const { BottomLeft, BottomRight, TopLeft, TopRight, config, WidgetList } = this.state;\n        if (config.DashboardConfig !== undefined) {\n            return (\n                <Form onSubmit={this.updateJson}>\n\n                    <Grid columns={2}>\n                        <Grid.Row>\n                            <Grid.Column>\n                                <Form.Select name='TopLeft' label=\"Position Haut Gauche\" defaultValue={TopLeft} options={this.createOptionList()} onChange={this.handleChange} />\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Form.Select name='TopRight' label=\"Position Haut Droite\" defaultValue={TopRight} options={this.createOptionList()} onChange={this.handleChange} />\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column>\n                                <Form.Select name='BottomLeft' label=\"Position Bas Gauche\" defaultValue={BottomLeft} options={this.createOptionList()} onChange={this.handleChange} />\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Form.Select name='BottomRight' label=\"Position Bas Droite\" defaultValue={BottomRight} options={this.createOptionList()} onChange={this.handleChange} />\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column>\n                                <Divider horizontal>Config Haut Gauche</Divider>\n                                {this.generateForm(WidgetList, TopLeft, \"TopLeft\")}\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Divider horizontal>Config Haut Droite</Divider>\n                                {this.generateForm(WidgetList, TopRight, \"TopRight\")}\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column>\n                                <Divider horizontal>Config Bas Gauche</Divider>\n                                {this.generateForm(WidgetList, BottomLeft, \"BottomLeft\")}\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Divider horizontal>Config Bas Droite</Divider>\n                                {this.generateForm(WidgetList, BottomRight, \"BottomRight\")}\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                    <br />\n                    <Button.Group floated='right'>\n                        <Button type='reset' onClick={() => window.location.reload}>Annuler</Button>\n                        <Button.Or text='ou' />\n                        <Button positive type='submit' onClick={this.handleSave}>Valider</Button>\n                    </Button.Group>\n                </Form>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Button icon labelPosition='left' fluid as={Link} to=\"/dashboard\">\n                        <Icon name=\"arrow left\" />\n                        Retour\n                    </Button>\n                    <Header as='h1'>Admin Page</Header>\n                    {this.renderFormPosition()}\n                </Container>\n\n            </div>\n        );\n    }\n}\n\nexport default AdminPage;","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport routes from \"./routes.js\";\n\nconst switchRoutes = (\n    <Switch>\n        {routes.map((prop, key)=>{\n            return(\n                <Route path={prop.path} component={prop.component} key={key} />\n            );\n        })}\n        <Route render={() => <Redirect from =\"/\" to=\"/dashboard\" />} />\n    </Switch>\n);\n\nexport default function SwitchRoute({ ...rest}) {\n    return(\n        <div>\n            {switchRoutes}\n        </div>\n    );\n}","import React from \"react\";\nimport { Button, Container, Header, Icon, Grid, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport '../assets/css/player.scss';\n\nclass RadioPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { seconds: 0 };\n    }\n\n    tick() {\n        this.setState(prevState => ({\n            seconds: prevState.seconds + 1\n        }));\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    componentDidMount() {\n        Axios.get(\"widgetConfig.json\")\n            .then(res => {\n                const config = res.data;\n                console.log(config)\n                const source = config.Radio.Source;\n                let options = Object.entries(source).map((key, i) => {\n                    if (key[1].Active !== true) return true;\n                    return (\n                        <Grid.Column>\n                            <Image style={{ \"cursor\": \"pointer\"}} circular size='small' src={key[1].Img} onClick={() => this.createMusicPlayer(key[1].Source)} />\n                        </Grid.Column>\n                    );\n                });\n\n                this.setState({\n                    listRadio: options\n                });\n            });\n\n        this.interval = setInterval(() => this.tick(), 1000);\n    }\n\n    createMusicPlayer(src) {\n        this.setState({\n            srcRadio: src\n        });\n    }\n\n    render() {\n        const date = new Date();\n\n        let hours = ('0' + date.getHours()).slice(-2);\n        let minutes = ('0' + date.getMinutes()).slice(-2);\n        let seconds = ('0' + date.getSeconds()).slice(-2);\n        let hour_val = hours + \":\" + minutes + \":\" + seconds;\n\n        return (\n            <div>\n                <Button icon labelPosition='left' fluid as={Link} to=\"/\">\n                    <Icon name=\"arrow left\" />\n                    Retour\n                </Button>\n                <Container>\n                    <Header as='h1'>\n                        <div className=\"ui grid\">\n                            <div className=\"four column row\">\n                                <div className=\"left floated column\">Radio page</div>\n                                <div className=\"right floated column\" style={{ textAlign: \"right\" }}>{hour_val}</div>\n                            </div>\n                        </div>\n                    </Header>\n                    <div className=\"ui container\">\n                        <h4 className=\"ui horizontal divider header\"><i className=\"music icon\" />Web Radio</h4>\n\n                        <Grid columns={4}>\n                            <Grid.Row >\n                                {this.state.listRadio}\n                            </Grid.Row>\n                        </Grid>\n\n                        <div id=\"radioPlayer\">\n                            <AudioPlayer autoPlay src={this.state.srcRadio}\n                                onPlay={e => console.log(\"onPlay\")} />\n                        </div>\n                    </div>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default RadioPage","import { createBrowserHistory } from \"history\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Router, Switch } from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css'\nimport 'semantic-ui-less/semantic.less';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport SwitchRoute from \"./SwitchRoutes\";\nimport RadioPage from \"./views/RadioPage\";\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n    <Router history={hist}>\n        <Switch>\n            <Route path=\"/radio\" component={RadioPage} />\n            <Route path=\"/\" component={SwitchRoute} />\n        </Switch>\n       \n    </Router>\n    , document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}